{"version":3,"sources":["logo.svg","components/Image-upload/ImgUpl.js","App.js","reportWebVitals.js","index.js"],"names":["ImgUpl","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","axios","post","fileData","type","lastModifiedDate","toDateString","onChange","this","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,sDCuFEA,E,4MAjFbC,MAAQ,CAGNC,aAAc,M,EAIhBC,aAAe,SAAAC,GAGb,EAAKC,SAAS,CAAEH,aAAcE,EAAME,OAAOC,MAAM,M,EAKnDC,aAAe,WAGb,IAAMC,EAAW,IAAIC,SAGrBD,EAASE,OACP,SACA,EAAKV,MAAMC,aACX,EAAKD,MAAMC,aAAaU,MAI1BC,QAAQC,IAAI,EAAKb,MAAMC,cAIvBa,IAAMC,KAAK,mCAAoCP,I,EAKjDQ,SAAW,WAET,OAAI,EAAKhB,MAAMC,aAGX,gCACE,+CACA,4CAAe,EAAKD,MAAMC,aAAaU,QACvC,4CAAe,EAAKX,MAAMC,aAAagB,QACvC,+CACiB,IACd,EAAKjB,MAAMC,aAAaiB,iBAAiBC,qBAM9C,gCACE,uBACA,8E,uDAQN,OACE,gCACI,4CAGA,gCACI,uBAAOF,KAAK,OAAOG,SAAUC,KAAKnB,eAClC,wBAAQoB,QAASD,KAAKd,aAAtB,wBAILc,KAAKL,kB,GA7EKO,aCQNC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"js/main.872c1201.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"media/logo.6ce24c58.svg\";","import axios from 'axios'; \r\n  \r\nimport React,{Component} from 'react'; \r\n  \r\nclass ImgUpl extends Component { \r\n   \r\n    state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null\r\n    }; \r\n     \r\n    // On file select (from the pop up) \r\n    onFileChange = event => { \r\n     \r\n      // Update the state \r\n      this.setState({ selectedFile: event.target.files[0] }); \r\n     \r\n    }; \r\n     \r\n    // On file upload (click the upload button) \r\n    onFileUpload = () => { \r\n     \r\n      // Create an object of formData \r\n      const formData = new FormData(); \r\n     \r\n      // Update the formData object \r\n      formData.append( \r\n        \"myFile\", \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name \r\n      ); \r\n     \r\n      // Details of the uploaded file \r\n      console.log(this.state.selectedFile); \r\n     \r\n      // Request made to the backend api \r\n      // Send formData object \r\n      axios.post(\"http://localhost:5000/api/upload\", formData); \r\n    }; \r\n     \r\n    // File content to be displayed after \r\n    // file upload is complete \r\n    fileData = () => { \r\n     \r\n      if (this.state.selectedFile) { \r\n          \r\n        return ( \r\n          <div> \r\n            <h2>File Details:</h2> \r\n            <p>File Name: {this.state.selectedFile.name}</p> \r\n            <p>File Type: {this.state.selectedFile.type}</p> \r\n            <p> \r\n              Last Modified:{\" \"} \r\n              {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n            </p> \r\n          </div> \r\n        ); \r\n      } else { \r\n        return ( \r\n          <div> \r\n            <br /> \r\n            <h4>Choose before Pressing the Upload button</h4> \r\n          </div> \r\n        ); \r\n      } \r\n    }; \r\n     \r\n    render() { \r\n     \r\n      return ( \r\n        <div> \r\n            <h1> \r\n              Upload Img \r\n            </h1> \r\n            <div> \r\n                <input type=\"file\" onChange={this.onFileChange} /> \r\n                <button onClick={this.onFileUpload}> \r\n                  Upload! \r\n                </button> \r\n            </div> \r\n          {this.fileData()} \r\n        </div> \r\n      ); \r\n    } \r\n  } \r\n  \r\n  export default ImgUpl;","import logo from './logo.svg';\nimport './App.css';\nimport ImgUpl from './components/Image-upload/ImgUpl'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ImgUpl/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}